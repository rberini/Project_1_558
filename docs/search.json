[
  {
    "objectID": "project_1_558.html",
    "href": "project_1_558.html",
    "title": "ST 558 Project One",
    "section": "",
    "text": "some placeholder text"
  },
  {
    "objectID": "project_1_558.html#project-overview",
    "href": "project_1_558.html#project-overview",
    "title": "ST 558 Project One",
    "section": "",
    "text": "some placeholder text"
  },
  {
    "objectID": "project_1_558.html#required-packages",
    "href": "project_1_558.html#required-packages",
    "title": "ST 558 Project One",
    "section": "Required Packages",
    "text": "Required Packages\nLoad required packages for project\nlibrary(tidyverse)\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(tidycensus)\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.2\n\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nWarning: package 'purrr' was built under R version 4.3.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(httr)\nlibrary(jsonlite)\n\n\nAttaching package: 'jsonlite'\n\nThe following object is masked from 'package:purrr':\n\n    flatten\n\nlibrary(tidycensus)"
  },
  {
    "objectID": "project_1_558.html#data-processing",
    "href": "project_1_558.html#data-processing",
    "title": "ST 558 Project One",
    "section": "Data Processing",
    "text": "Data Processing\nsome placeholder text\n\n#url &lt;- \"https://api.census.gov/data/2022/acs/acs1/pums\"\n#ID_info &lt;- httr::GET(url)\n#status_code(ID_info)\n#str(ID_info, max.level=1)\n#parsed &lt;- fromJSON(rawToChar(ID_info$content))\n\n\n\n#URL_ids1 &lt;- \"https://api.nhle.com/stats/rest/en/team\"\n#id_info1 &lt;- httr::GET(URL_ids)\n#str(id_info1, max.level = 1)\n#parsed &lt;- fromJSON(rawToChar(id_info1$content))\n#team_info1 &lt;- as_tibble(parsed$data)\n#team_info1\n\n\nhelp &lt;- get_acs(geography = \"state\", variables = \"B19013_001\", year = 2022)\n\nGetting data from the 2018-2022 5-year ACS\n\n\nWarning: • You have not set a Census API key. Users without a key are limited to 500\nqueries per day and may experience performance limitations.\nℹ For best results, get a Census API key at\nhttp://api.census.gov/data/key_signup.html and then supply the key to the\n`census_api_key()` function to use it throughout your tidycensus session.\nThis warning is displayed once per session.\n\n# function for creating data should assign a class of census\n# class(your_tibble) &lt;- c(\"census\", class(your_tibble))"
  },
  {
    "objectID": "project_1_558.html#obtaining-person-level-records",
    "href": "project_1_558.html#obtaining-person-level-records",
    "title": "ST 558 Project One",
    "section": "Obtaining Person Level Records",
    "text": "Obtaining Person Level Records\nsome placeholder text"
  },
  {
    "objectID": "project_1_558.html#writing-a-generic-function-for-summarizing",
    "href": "project_1_558.html#writing-a-generic-function-for-summarizing",
    "title": "ST 558 Project One",
    "section": "Writing a Generic Function for Summarizing",
    "text": "Writing a Generic Function for Summarizing\nsome placeholder text\n\nNumeric Summary\nwrite a function that produces means and standard deviations for our numeric variable(s) and counts for our categorical variable(s).\nTest out this function by running summary(your_census_tibble) on something you’ve returned from your census API function.\n\n\nGraphical Summary\nSimilarly, let’s create a generic plot() function for a census class tibble. Require the user to specify one categorical variable and one numeric variable for plotting purposes.\n\n#ggplot(your_census_tibble, aes(x = get(cat_var), y = get(num_var), weight = PWGTP)) + geom_boxplot()"
  }
]